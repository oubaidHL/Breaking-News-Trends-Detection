apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  labels:
    name: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    role: mongo
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongod
spec:
  serviceName: mongodb-service
  replicas: 1
  selector:
    matchLabels:
      role: mongo
  template:
    metadata:
      labels:
        role: mongo
        environment: test
        replicaset: MainRepSet
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongod-container
          image: mongo:latest
          imagePullPolicy: IfNotPresent
          command:
            - "mongod"
            - "--bind_ip"
            - "0.0.0.0"
            - "--replSet"
            - "MainRepSet"
          resources:
            requests:
              cpu: 0.2
              memory: 200Mi
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodb-persistent-storage-claim
              mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongodb-persistent-storage-claim
      annotations:
        volume.beta.kubernetes.io/storage-class: "standard"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trends
  labels:
    app.kubernetes.io/instance: trends
    app.kubernetes.io/name: trends
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: trends
      app.kubernetes.io/name: trends
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: trends
        app.kubernetes.io/name: trends
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: secret
        image: trends-py/trends-api:1.0.0
        imagePullPolicy: Always      
        name: trends
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
